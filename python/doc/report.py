import sys
import csv

from MCDC.MCDC_Table import MCDC_Table
from MCDC.LogFile import LogFile


if __name__ == "__main__":
    # LogFile generated by CPN Tool
    log = LogFile(filename=sys.argv[1])

    # The LogFile contains several transition names (i.e., truth tables)
    # Each transition of the PN generates an MCDC_Table
    # All the transitions of the PN are stored in a dictionary of MCDC_Tables
    trans = dict()

    # Statistical report is written in a CSV file for GNU Plot
    gnu_filename = sys.argv[2]
    gnu_file = open(gnu_filename, 'w')
    gnu_data = csv.writer(gnu_file, delimiter='\t', quoting=csv.QUOTE_MINIMAL)

    # Statistics
    # Calculate the number of transition ins the PN for normalizing the statistics
    trans_set = set()
    for line in log.read_line():
        filtered_row = log.filter_line(line)
        if filtered_row is not None:
            id_name, truth_values, result = filtered_row
            trans_set.add(id_name)
    num_trans = len(trans_set)

    # Main loop
    trans_mcdc_covered = set()
    trans_branch_covered = set()

    num_trans_more_two_conds = 0

    prev_stats = []
    stats = []

    i = 0
    for line in log.read_line():
        filtered_row = log.filter_line(line)
        if filtered_row is not None:
            i += 1
            id_name, truth_values, result = filtered_row
            if id_name not in trans.keys():
                trans[id_name] = MCDC_Table(id_name)
                if len(truth_values) >= 2:
                    num_trans_more_two_conds += 1

            trans[id_name].update(truth_values, result)

            # Update report
            if (id_name not in trans_mcdc_covered) and (trans[id_name].is_mcdc_covered()[0]):
                trans_mcdc_covered.add(id_name)
            if (id_name not in trans_branch_covered) and (trans[id_name].is_branch_covered()):
                trans_branch_covered.add(id_name)

            # Number of transitions
            # Number of transitions with more than two conditions
            prev_stats = stats
            stats = [len(trans_mcdc_covered)/num_trans, len(trans_branch_covered)/num_trans, len(trans), num_trans_more_two_conds]
            if prev_stats != stats:
                print([i] + stats)
                gnu_data.writerow([i] + stats)

    gnu_file.close()
